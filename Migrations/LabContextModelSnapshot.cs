// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace OrderingCars.Migrations
{
    [DbContext(typeof(LabContext))]
    partial class LabContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("lab.Models.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<int>("Cost")
                        .HasColumnType("integer")
                        .HasColumnName("cost");

                    b.Property<int>("RentalPrice")
                        .HasColumnType("integer")
                        .HasColumnName("rental_price");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<int>("YearManufacture")
                        .HasColumnType("integer")
                        .HasColumnName("year_manufacture");

                    b.HasKey("ID")
                        .HasName("pk_car");

                    b.ToTable("car");
                });

            modelBuilder.Entity("lab.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int>("Discount")
                        .HasColumnType("integer")
                        .HasColumnName("discount");

                    b.Property<string>("Middlename")
                        .HasColumnType("text")
                        .HasColumnName("middlename");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("ID")
                        .HasName("pk_client");

                    b.ToTable("client");
                });

            modelBuilder.Entity("lab.Models.IssuedCar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("issued_date");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("return_date");

                    b.Property<decimal>("ServiceCost")
                        .HasColumnType("numeric")
                        .HasColumnName("service_cost");

                    b.HasKey("ID")
                        .HasName("pk_issued_car");

                    b.HasIndex("CarId")
                        .HasDatabaseName("ix_issued_car_car_id");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ix_issued_car_client_id");

                    b.ToTable("issued_car");
                });

            modelBuilder.Entity("lab.Models.IssuedCar", b =>
                {
                    b.HasOne("lab.Models.Car", "Car")
                        .WithMany("MyProperty")
                        .HasForeignKey("CarId")
                        .HasConstraintName("fk_issued_car_car_car_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab.Models.Client", "Client")
                        .WithMany("MyProperty")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_issued_car_client_client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("lab.Models.Car", b =>
                {
                    b.Navigation("MyProperty");
                });

            modelBuilder.Entity("lab.Models.Client", b =>
                {
                    b.Navigation("MyProperty");
                });
#pragma warning restore 612, 618
        }
    }
}
